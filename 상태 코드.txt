[상태 코드]
- 클라이언트가 보낸 요청의 처리 상태를 응답하여 알려줌
1. 1xx (Informational) : 요청이 수신되어 처리중, 거의 사용 X

2. 2xx (Successful) : 요청 정상 처리
   - 200 : OK 
   - 201 : Created 
     = 요청에 성공하여 새로운 리소스 생성)
   - 202 : Accepted 
     = (요청이 접수되었으나 처리가 완료되지 않음)
     = 요청 접수 후 시간이 지나 배치 프로세스가 요청을 처리하는 배치 처리 등에서 활용
   - 204 : No Content
     = 서버가 요청 수행에 성공했으나, 응답 페이로드 본문에 보낼 데이터가 없음
     = ex) 웹 문서 편집기 에서의 save 버튼
     = save 버튼의 결과로 아무 내용이 없어도 됨
     = save 버튼을 눌러도 같은 화면을 유지해야함
     = 결과 내용이 없어도 204(2xx) 만으로 성공 인식 가능

3. 3xx (Redirection) : 요청을 완료하려면 추가 행동이 필요
  = 웹 브라우저는 3xx 응답 결과에 Location 헤더가 있으면, Location 위치로 자동 이동 (Redirect)
  - 300 : Multiple Choices (안 씀)
  - 301 : Moved Permanently
	= Redirect 시 요청 메서드가 GET으로 변하고, 본문이 제거될 수도 있음
  - 302 : Found
  - 303 : See Other
  - 304 : Not Modified
	= 캐시를 목적으로 사용
	= 클라이언트에게 리소스가 수정되지 않았음을 알림. 고로 클라이언트는 로컬 PC에 저장된 캐시를 재사용. (캐시로 Redirect)
	= 304 응답은 응답에 메세지 바디를 포함하면 안 됨 (로컬 캐시를 사용해야 하므로)
	= 조건부 GET, HEAD 요청시 사용
  - 307 : Temporart Redirect
  - 308 : Permanent Redirect
	= 301과 같은 기능
	= Redirect 시 요청 메서드와 본문 유지 (처음 POST를 보내면 Redirect에서도 유지)

  @ 종류
  (1) 영구 Redirection : 특정 리소스의 URI가 영구적을 이동
	- 리소스의 URI가 영구적으로 이동
	- 본래 URL 사용 불가, 검색 엔진 등에서도 변경 인지
	- ex) /memvers => users
	- ex) /event => /new-event
	- 301, 308
  (2) 일시 Redirection : 일시적 변경
	- 리소스의 URI가 일시적으로 변경 (이런 이유로 검색 엔진 등에서 URL을 변경하면 안 됨)
	- 주문 완료 후 주문 내역 화면으로 이동
	-  PRG : POST / Redirect / GET
		= POST 로 주문한 후, 새로고침으로 인한 중복 주문 방지
		= POST 로 주문한 후, 주문 결과 화면을 GET 메서드로 Redirect
		= 새로고침해도 결과 화면을 GET으로 조회
		= 중복 주문 대신 결과 화면만 GET으로 다시 요청
		= PRG 이후 Redirect한다면? 
			#URL 이 이미 POST => GET으로 Redirect
			#새로고침 해도 GET으로 된 결과 화면만 조회
	- 302 Found
		= Redirect 시 요청 메서드가 GET으로 변하고, 본문이 제거될 수 있음
	- 307 Temporary Redirect
		= 302와 같은 기능
		= Redirect 시 요청 메서드와 본문 유지 (요청 메서드를 변경하면 안 됨. Must Not)
	- 303 See Other
		= 302와 같은 기능
		= Redirect 시 요청 메서드가 GET으로 변경
  (3) 특수 Redirection : 
	- 결과 대신 캐시를 사용

4. 4xx (Client Error) : 클라이언트 오류, 잘못된 문법 등으로 서버가 요청을 수행 불가
  (1) 400 :
	- 클라이언트의 요청에 잘못된 문법 등으로 서버가 요청을 수행 불가
		= 요청 구문, 메세지 등 오류
		= 클라이언트는 요청 내용을 다시 검토하여 보내야 함
		= ex) 요청 parameter가 잘못 되거나, API 스펙이 맞지 않을 때
	- 오류의 원인이 클라이언트에게 있음
	- 클라이언트가 이미 잘못된 요청 or 데이터를 보내고 있기에, 재시도하면 실패
  (2) 401 : Unauthorized
	- 클라이언트가 해당 리소스에 대한 인증이 필요
	- 인증(Authentication) 되지 않음
	- 401 오류 발생시 응답에 WWW-Authenticate 헤더와 함께 인증 방법을 설명
	- 참고 :
		= 인증(Authentication) : 본인이 누구인지 확인 (로그인)
		= 인가(Authorization) : 권한 부여 (ADMIN 권한처럼 특정 리소스에 접근 가능한 권한, 인증이 있어야 인가)
		= 오류 메세지가 Unauthorized 이지만 인증 되지 않음 (이름이 아쉬움)
  (3) 403 : Forbidden
	- 서버가 요청을 이해했으나 승인을 거부
	- 주로 인증 자격 증명은 있으나, 접근 권한이 불충분한 경우
	- ex) admin 등급이 아닌 사용자가 로그인한 뒤, admin 등급 리소스에 접근하는 경우
  (4) 404 : Not Found
	- 요청 리소스를 찾을 수 없음
	- 요청 리소스가 서버에 없음
	- 클라이언트가 권한이 부족한 리소스에 접근 시, 해당 리소스를 숨기고 싶을 때

5. 5xx (Server Error) : 서버 오류, 서버가 정상 요청을 처리하지 못함
  (1) 500 : Interanl Server Error
	- 서버 문제로 오류 발생, 모호하면 500 오류
  (2) 503 : Service Unavailable
	- 서비스 이용 불가
	- 서버가 일시적 과부하 or 예정된 작업으로 잠시 요청을 처리 불가
	- Retry-After 헤더 필드로 언제 복구 될 지 보낼 수 있음